include:
  project: TankerHQ/gitlab-ci-files
  file: /native.yml
  ref: 2021-10-08-203

.proxy:
  variables:
    FETCHPP_TEST_HOST: "httpbin.org"
    FETCHPP_TEST_PROXY: "tinyproxy:8888"
  services:
    - name: registry.gitlab.com/tankerhq/ci/tinyproxy:latest
      alias: tinyproxy
.jobs:
  extends:
    - .build
    - .proxy

###############
# build stage #
###############

.rules/build:
  rules:
    - !reference [.rules/mr/auto, rules]
    - !reference [.rules/web/auto, rules]
    - !reference [.rules/push-master-or-feat, rules]

build/linux:
  extends:
    - .jobs
    - .tags/linux
    - .rules/build
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile linux-release

build/macos/x86_64:
  extends:
    - .jobs
    - .tags/macos/x86_64
    - .rules/build
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile macos-x86_64-release

build/macos/arm:
  extends:
    - .jobs
    - .tags/macos/arm
    - .rules/build
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile macos-armv8-release

build/windows:
  extends:
    - .jobs
    - .tags/windows
    - .rules/build
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile vs2019-release

build/asan/linux:
  extends:
    - .jobs
    - .tags/linux
    - .rules/mr/manual
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile linux-asan-release-debinfo --build-missing

#################
# nightly stage #
#################

nightly/asan/linux:
  extends:
    - .jobs
    - .tags/linux
    - .rules/nightly
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile linux-asan-release-debinfo --build-missing

nightly/coverage:
  extends:
    - .jobs
    - .tags/linux
    - .rules/nightly
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile linux-release --coverage
    - mv build/linux-release/coverage coverage
  artifacts:
    paths:
      - coverage/
    expire_in: 7 days

release:
  rules:
    - if: $CI_COMMIT_REF_NAME == "master"
      when: manual
  extends:
    - .tags/linux
    - .deploy
  script:
    - poetry run tbump --no-push $FETCHPP_RELEASE_VERSION

pages:
  extends:
    - .deploy
    - .tags/linux
    - .rules/nightly
  needs:
    - nightly/coverage
  script:
    - mv coverage/ public/
  artifacts:
    paths:
      - public
    expire_in: 7 days
  tags:
    - linux
