include:
  project: TankerHQ/gitlab-ci-files
  file: /native.yml
  ref: 2022-01-04-239

stages:
  - build
  - pre-release
  - release

.proxy:
  variables:
    FETCHPP_TEST_HOST: "httpbin.org"
    FETCHPP_TEST_PROXY: "tinyproxy:8888"
  services:
    - name: registry.gitlab.com/tankerhq/ci/tinyproxy:latest
      alias: tinyproxy

.jobs:
  extends:
    - .build
    - .proxy

###############
# build stage #
###############

.rules/build:
  rules:
    - !reference [.rules/mr/auto, rules]
    - !reference [.rules/web/auto, rules]
    - !reference [.rules/push-master-or-feat, rules]
    - !reference [.rules/release/branch, rules]

build/linux:
  extends:
    - .jobs
    - .rules/build
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile linux-release
  tags: !reference [.tags/compilation-linux, tags]

build/macos/x86_64:
  extends:
    - .jobs
    - .rules/build
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile macos-x86_64-release
  tags: !reference [.tags/macos/x86_64, tags]

build/macos/arm:
  extends:
    - .jobs
    - .rules/build
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile macos-armv8-release
  tags: !reference [.tags/macos/arm, tags]

build/windows:
  extends:
    - .jobs
    - .rules/build
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile vs2019-release
  tags: !reference [.tags/compilation-windows, tags]

release/prepare:
  stage: pre-release
  rules:
    - if: $CI_COMMIT_REF_NAME =~ /\Arelease\/.+\z/
      when: manual
  script:
    - poetry run python run-ci.py --isolate-conan-user-home prepare-release
  artifacts:
    reports:
      dotenv: variables.env

release/deploy:
  stage: release
  extends:
    - .rules/release/branch
  needs:
    - job: release/prepare
  script:
    - echo releasing fetchpp v$FETCHPP_RELEASE_VERSION
  release:
    description: fetchpp v$FETCHPP_RELEASE_VERSION
    tag_name: v$FETCHPP_RELEASE_VERSION
      
#################
# nightly stage #
#################

build/asan/linux:
  extends:
    - .jobs
  rules:
    - !reference [.rules/mr/manual, rules]
    - !reference [.rules/nightly, rules]
  tags:
    # asan use a lot of memory, some runners only have 16GB of memory
    - GCE-Runner-008
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --profile linux-asan-release-debinfo --build-missing

